name: Build and Release (Windows)

on:
  workflow_dispatch:

env:
  BUILD_TYPE: Release

jobs:
  build:
    runs-on: windows-latest

    steps:
      # Step 1: Checkout the repository
      - uses: actions/checkout@v4

      # Step 2: Configure CMake (using the same structure as your build/test workflow)
      - name: Configure CMake
        run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

      # Step 3: Build the project
      - name: Build
        run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

      # Step 4: Test the build
      - name: Test
        working-directory: ${{github.workspace}}/build
        run: ctest -C ${{env.BUILD_TYPE}}

      # Step 5: Run (optional if you want to check executable manually)
      - name: Run
        run: ${{github.workspace}}/build/Release/PokerGame.exe -ci

      # Step 6: Upload the compiled executable as an artifact
      - name: Upload executable
        uses: actions/upload-artifact@v3
        with:
          name: windows-executable
          path: ${{github.workspace}}/build/Release/PokerGame.exe

  release:
    needs: build
    runs-on: ubuntu-latest

    steps:
      # Step 7: Checkout the repository to prepare for tagging
      - uses: actions/checkout@v4

      # Step 8: Automatically generate a tag based on the current date and time
      - name: Create a new tag
        id: create_tag
        run: |
          TAG_NAME=v1.0.${{ github.run_number }}-$(date +'%Y%m%d%H%M%S')
          echo "TAG_NAME=${TAG_NAME}" >> $GITHUB_ENV

      # Step 9: Push the tag to the repository
      - name: Push the new tag to GitHub
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git tag ${{ env.TAG_NAME }}
          git push origin ${{ env.TAG_NAME }}

      # Step 10: Create GitHub Release with the new tag and attach the executable
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ env.TAG_NAME }}
          files: ${{github.workspace}}/build/Release/PokerGame.exe
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
